<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTTPhanMem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>